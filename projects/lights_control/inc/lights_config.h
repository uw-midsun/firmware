#pragma once

#include "gpio.h"

typedef enum {
  LIGHTS_CONFIG_BOARD_TYPE_FRONT = 0,
  LIGHTS_CONFIG_BOARD_TYPE_REAR,
  NUM_LIGHTS_CONFIG_BOARDS
} LightsConfigBoardType;

typedef struct LightsConfig {
  const LightsConfigBoardType board_type;
  const GPIOAddress *addresses;
  const uint8_t num_addresses;
  const GPIOSettings *gpio_settings_out;
  const uint16_t (*event_mappings)[2];
  const uint8_t num_supported_events;
} LightsConfig;

typedef enum {
  LIGHTS_CONFIG_FRONT_LIGHT_HORN = 0,
  LIGHTS_CONFIG_FRONT_LIGHT_HIGH_BEAMS_RIGHT,
  LIGHTS_CONFIG_FRONT_LIGHT_HIGH_BEAMS_LEFT,
  LIGHTS_CONFIG_FRONT_LIGHT_LOW_BEAMS_RIGHT,
  LIGHTS_CONFIG_FRONT_LIGHT_LOW_BEAMS_LEFT,
  LIGHTS_CONFIG_FRONT_LIGHT_DRL_RIGHT,
  LIGHTS_CONFIG_FRONT_LIGHT_DRL_LEFT,
  LIGHTS_CONFIG_FRONT_LIGHT_SIDE_LEFT_INDICATOR,
  LIGHTS_CONFIG_FRONT_LIGHT_LEFT_TURN,
  LIGHTS_CONFIG_FRONT_LIGHT_SIDE_RIGHT_INDICATOR,
  LIGHTS_CONFIG_FRONT_LIGHT_RIGHT_TURN,
  NUM_FRONT_LIGHTS
} LightsConfigFrontLights;

typedef enum {
  LIGHTS_CONFIG_REAR_LIGHT_STROBE = 0,
  LIGHTS_CONFIG_REAR_LIGHT_RIGHT_BRAKE,
  LIGHTS_CONFIG_REAR_LIGHT_RIGHT_OUTER_BRAKE,
  LIGHTS_CONFIG_REAR_LIGHT_LEFT_BRAKE,
  LIGHTS_CONFIG_REAR_LIGHT_LEFT_OUTER_BRAKE,
  LIGHTS_CONFIG_REAR_LIGHT_CENTRE_BRAKE,
  LIGHTS_CONFIG_REAR_LIGHT_LEFT_OUTER_TURN,
  LIGHTS_CONFIG_REAR_LIGHT_LEFT_TURN,
  LIGHTS_CONFIG_REAR_LIGHT_RIGHT_OUTER_TURN,
  LIGHTS_CONFIG_REAR_LIGHT_RIGHT_TURN,
  NUM_REAR_LIGHTS,
} LightsConfigRearLights;

StatusCode lights_config_init(void);

LightsConfig *lights_config_load(void);
